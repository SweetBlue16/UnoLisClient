<Application x:Class="UnoLisClient.UI.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:UnoLisClient.UI"
             xmlns:converters="clr-namespace:UnoLisClient.UI.Converters"
             StartupUri="UnoLisWindows/MainWindow.xaml">
    <Application.Resources>
        <!-- Button Colors -->
        <SolidColorBrush x:Key="PrimaryYellowColor" Color="#FFD60A"/>
        <SolidColorBrush x:Key="PrimaryTextColor" Color="#121212"/>
        <SolidColorBrush x:Key="PrimaryButtonMouseOverColor" Color="#FFEA80"/>
        <SolidColorBrush x:Key="PrimaryButtonPressedColor" Color="#F5A800"/>
        
        <SolidColorBrush x:Key="SecondaryGrayColor" Color="#8E8E93"/>
        <SolidColorBrush x:Key="SecondaryTextColor" Color="#F2F2F7"/>
        <SolidColorBrush x:Key="SecondaryButtonMouseOverColor" Color="#A7A7AD"/>
        <SolidColorBrush x:Key="SecondaryButtonPressedColor" Color="#787878"/>
        
        <!-- TextBox and PasswordBox Colors -->
        <SolidColorBrush x:Key="DeselectedTextBoxBackgroundColor" Color="#F2F2F7"/>
        <SolidColorBrush x:Key="DeselectedTextBoxBorderColor" Color="#444444"/>
        <SolidColorBrush x:Key="DeselectedTextBoxTextColor" Color="#292929"/>

        <SolidColorBrush x:Key="FocusedTextBoxBackgroundColor" Color="#F2F2F7"/>
        <SolidColorBrush x:Key="FocusedTextBoxBorderColor" Color="#0A84FF"/>
        <SolidColorBrush x:Key="FocusedTextBoxTextColor" Color="#8E8E93"/>
        
        <!-- ComboBox Colors -->
        <SolidColorBrush x:Key="DeselectedComboBoxBackgroundColor" Color="#F2F2F7"/>
        <SolidColorBrush x:Key="DeselectedComboBoxBorderColor" Color="#555555"/>
        <SolidColorBrush x:Key="DeselectedComboBoxTextColor" Color="#292929"/>
        <SolidColorBrush x:Key="ComboBoxDropdownButtonColor" Color="#555555"/>

        <SolidColorBrush x:Key="FocusedComboBoxBorderColor" Color="#0A84FF"/>
        <SolidColorBrush x:Key="MouseOverComboBoxBorderColor" Color="#A7A7AD"/>

        <SolidColorBrush x:Key="ComboBoxItemMouseOverColor" Color="#555555"/>
        <SolidColorBrush x:Key="ComboBoxDropdownBackgroundColor" Color="#121212"/>
        
        <!-- ScrollBar Colors -->
        <SolidColorBrush x:Key="ScrollBarTrackColor" Color="#22FFFFFF"/>
        <SolidColorBrush x:Key="ScrollBarThumbColor" Color="#FFD44E"/>
        <SolidColorBrush x:Key="ScrollBarThumbHoverColor" Color="#FFFFE27F"/>
        <SolidColorBrush x:Key="ScrollBarThumbDragColor" Color="#FFFFC400"/>
        <SolidColorBrush x:Key="ScrollBarThumbDisabledColor" Color="#444444"/>
        <SolidColorBrush x:Key="ScrollBarBackgroundColor" Color="#FF000000"/>
        
        <!-- DataGrid Colors -->
        <SolidColorBrush x:Key="DataGridBackgroundColor" Color="#1E1E2E"/>
        <SolidColorBrush x:Key="DataGridRowColor" Color="#2D2F3A"/>
        <SolidColorBrush x:Key="DataGridRowHoverColor" Color="#3D82F0"/>
        <SolidColorBrush x:Key="DataGridRowSelectedColor" Color="#FFD369"/>
        <SolidColorBrush x:Key="DataGridTextColor" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="DataGridTextSecondaryColor" Color="#B0B0B0"/>
        <SolidColorBrush x:Key="DataGridScrollBarBaseColor" Color="#303344"/>
        <LinearGradientBrush x:Key="DataGridGradientBackground"
                             StartPoint="0,0"
                             EndPoint="0,1"
                             Opacity="0.9">
            <GradientStop Color="#1E1E2E" Offset="0.0"/>
            <GradientStop Color="#2D2F3A" Offset="1.0"/>
        </LinearGradientBrush>
        
        <!-- ProgressBar Colors -->
        <SolidColorBrush x:Key="ProgressBarBackgroundColor" Color="#1A1F29"/>
        <SolidColorBrush x:Key="ProgressBarBorderBrushColor" Color="#0A84FF"/>
        <LinearGradientBrush x:Key="ProgressBarForegroundColor"
                             StartPoint="0,0"
                             EndPoint="1,0">
            <GradientStop Color="#18FFFF" Offset="0"/>
            <GradientStop Color="#00E676" Offset="1"/>
        </LinearGradientBrush>

        <!-- Starts PrimaryButtonStyle -->
        <Style x:Key="PrimaryButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{DynamicResource PrimaryYellowColor}"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
            <Setter Property="FontFamily" Value="pack://application:,,,/Fonts/#Luckiest Guy"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="12 6 12 6"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="MaxHeight" Value="40"/>
            <Setter Property="Width" Value="Auto"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="ButtonBorder" CornerRadius="5"
                                Background="{TemplateBinding Background}"
                                Width="{TemplateBinding Width}"
                                MaxHeight="{TemplateBinding MaxHeight}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="ContentPresenter"
                                              Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ButtonBorder"
                                        Property="Background"
                                        Value="{DynamicResource PrimaryButtonMouseOverColor}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="ButtonBorder"
                                        Property="Background"
                                        Value="{DynamicResource PrimaryButtonPressedColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Ends PrimaryButtonStyle -->
        
        <!-- Starts SecondaryButtonStyle -->
        <Style x:Key="SecondaryButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{DynamicResource SecondaryGrayColor}"/>
            <Setter Property="Foreground" Value="{DynamicResource SecondaryTextColor}"/>
            <Setter Property="FontFamily" Value="pack://application:,,,/Fonts/#Luckiest Guy"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="12 6 12 6"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="MaxHeight" Value="40"/>
            <Setter Property="Width" Value="Auto"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="ButtonBorder" CornerRadius="5"
                        Background="{TemplateBinding Background}"
                        Width="{TemplateBinding Width}"
                        MaxHeight="{TemplateBinding MaxHeight}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True"
                        Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="ContentPresenter"
                                      Focusable="False"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      Margin="{TemplateBinding Padding}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ButtonBorder"
                                Property="Background"
                                Value="{DynamicResource SecondaryButtonMouseOverColor}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="ButtonBorder"
                                Property="Background"
                                Value="{DynamicResource SecondaryButtonPressedColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Ends SecondaryButtonStyle -->
        
        <!-- Starts TextBoxStyle -->
        <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource DeselectedTextBoxBackgroundColor}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="BorderBrush" Value="{DynamicResource DeselectedTextBoxBorderColor}"/>
            <Setter Property="Foreground" Value="{DynamicResource DeselectedTextBoxTextColor}"/>
            <Setter Property="Padding" Value="5 3"/>
            <Setter Property="CaretBrush" Value="{DynamicResource DeselectedTextBoxTextColor}"/>
            <Setter Property="FontFamily" Value="pack://application:,,,/Fonts/#Lato"/>
            <Setter Property="Cursor" Value="IBeam"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Width" Value="300"/>
            <Setter Property="MaxWidth" Value="300"/>
            <Setter Property="Height" Value="Auto"/>
            <Setter Property="MaxHeight" Value="40"/>
            <Setter Property="AllowDrop" Value="True"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="TextBorder"
                                Background="{TemplateBinding Background}"
                                CornerRadius="5"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                MaxHeight="{TemplateBinding MaxHeight}"
                                MaxWidth="{TemplateBinding MaxWidth}"
                                SnapsToDevicePixels="True">
                            <Grid Margin="{TemplateBinding Padding}">
                                <ScrollViewer x:Name="PART_ContentHost"
                                              Focusable="False"
                                              HorizontalScrollBarVisibility="Hidden"
                                              VerticalScrollBarVisibility="Hidden"
                                              Margin="-2 2"/>
                                <Label x:Name="WaterMarkerLabel"
                                       Content="{TemplateBinding Tag}"
                                       FontWeight="{TemplateBinding FontWeight}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                       Visibility="Collapsed"
                                       Foreground="{DynamicResource FocusedTextBoxTextColor}"
                                       Padding="{TemplateBinding Padding}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Text" Value=""/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Visibility"
                                        TargetName="WaterMarkerLabel"
                                        Value="Visible"/>
                            </MultiTrigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush"
                                        Value="{DynamicResource FocusedTextBoxBorderColor}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="BorderBrush"
                                        Value="{DynamicResource FocusedTextBoxBorderColor}"/>
                                <Setter TargetName="WaterMarkerLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource FocusedTextBoxTextColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Ends TextBoxStyle -->
        
        <!-- Starts PasswordBoxStyle -->
        <Style x:Key="PasswordBoxStyle" TargetType="{x:Type PasswordBox}">
            <Setter Property="Background" Value="{DynamicResource DeselectedTextBoxBackgroundColor}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="BorderBrush" Value="{DynamicResource DeselectedTextBoxBorderColor}"/>
            <Setter Property="Foreground" Value="{DynamicResource DeselectedTextBoxTextColor}"/>
            <Setter Property="Padding" Value="5 3"/>
            <Setter Property="CaretBrush" Value="{DynamicResource DeselectedTextBoxTextColor}"/>
            <Setter Property="FontFamily" Value="pack://application:,,,/Fonts/#Lato"/>
            <Setter Property="Cursor" Value="IBeam"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Width" Value="300"/>
            <Setter Property="MaxWidth" Value="300"/>
            <Setter Property="Height" Value="Auto"/>
            <Setter Property="MaxHeight" Value="40"/>
            <Setter Property="AllowDrop" Value="True"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                        <Border x:Name="TextBorder"
                                Background="{TemplateBinding Background}"
                                CornerRadius="5"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                MaxHeight="{TemplateBinding MaxHeight}"
                                MaxWidth="{TemplateBinding MaxWidth}"
                                SnapsToDevicePixels="True">
                            <Grid Margin="{TemplateBinding Padding}">
                                <ScrollViewer x:Name="PART_ContentHost"
                                      Focusable="False"
                                      HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollBarVisibility="Hidden"
                                      Margin="-2 2"/>
                                <Label x:Name="WaterMarkerLabel"
                                       Content="{TemplateBinding Tag}"
                                       FontWeight="{TemplateBinding FontWeight}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                       Visibility="Collapsed"
                                       Foreground="{DynamicResource FocusedTextBoxTextColor}"
                                       Padding="{TemplateBinding Padding}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush"
                                        Value="{DynamicResource FocusedTextBoxBorderColor}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="BorderBrush"
                                        Value="{DynamicResource FocusedTextBoxBorderColor}"/>
                                <Setter TargetName="WaterMarkerLabel"
                                        Property="Foreground"
                                        Value="{DynamicResource FocusedTextBoxTextColor}"/>
                                <!--Setter TargetName="WaterMarkerLabel"
                                        Property="Visibility"
                                        Value="Collapsed"/-->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Ends PasswordBoxStyle -->
        
        <!-- Starts ComboBoxStyle -->
        <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="Background" Value="{DynamicResource DeselectedComboBoxBackgroundColor}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource DeselectedComboBoxBorderColor}"/>
            <Setter Property="Foreground" Value="{DynamicResource DeselectedComboBoxTextColor}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Padding" Value="4,2"/>
            <Setter Property="FontFamily" Value="pack://application:,,,/Fonts/#Lato"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <Border x:Name="Border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="5"/>
                            <Grid Margin="6,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter x:Name="ContentSite"
                                                  Grid.Column="0"
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Left"
                                                  Margin="2,0,0,0"
                                                  Content="{TemplateBinding SelectionBoxItem}"
                                                  RecognizesAccessKey="True"/>
                                <TextBlock x:Name="Watermark"
                                           Grid.Column="0"
                                           Text="{TemplateBinding Tag}"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Left"
                                           Foreground="{DynamicResource DeselectedComboBoxTextColor}"
                                           IsHitTestVisible="False"
                                           Visibility="Collapsed"/>
                                <ToggleButton x:Name="PART_DropDownToggle"
                                              Grid.Column="1"
                                              Focusable="True"
                                              FocusVisualStyle="{x:Null}"
                                              Background="Transparent"
                                              BorderBrush="Transparent"
                                              BorderThickness="0"
                                              IsChecked="{Binding IsDropDownOpen,
                                                          Mode=TwoWay,
                                                          RelativeSource={RelativeSource TemplatedParent}}"
                                              Padding="6,0"
                                              ClickMode="Press">
                                    <Path Data="M 0 0 L 4 4 L 8 0 Z"
                                          Fill="{DynamicResource DeselectedComboBoxTextColor}"
                                          Width="8"
                                          Height="5"
                                          HorizontalAlignment="Right"
                                          VerticalAlignment="Center"/>
                                </ToggleButton>
                            </Grid>
                            <Popup x:Name="PART_Popup"
                                   Placement="Bottom"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   PopupAnimation="Slide">
                                <Border Background="{DynamicResource DeselectedComboBoxBackgroundColor}"
                                        BorderBrush="{DynamicResource FocusedComboBoxBorderColor}"
                                        BorderThickness="1"
                                        CornerRadius="5"
                                        Padding="2">
                                    <ScrollViewer>
                                        <StackPanel IsItemsHost="True"/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="SelectedIndex" Value="-1">
                                <Setter TargetName="Watermark"
                                        Property="Visibility"
                                        Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border"
                                        Property="BorderBrush"
                                        Value="{DynamicResource FocusedComboBoxBorderColor}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter TargetName="Border"
                                        Property="BorderBrush"
                                        Value="{DynamicResource FocusedComboBoxBorderColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Ends ComboBoxStyle -->
        
        <!-- Starts ScrollBarStyle -->
        <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
            <Setter Property="Background" Value="{DynamicResource ScrollBarThumbColor}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Grid>
                            <Border x:Name="Rectangle"
                                    CornerRadius="6"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Background="{TemplateBinding Background}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Tag" Value="Horizontal">
                                <Setter TargetName="Rectangle"
                                        Property="Height"
                                        Value="7"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Foreground" Value="{DynamicResource ScrollBarThumbColor}"/>
            <Setter Property="Background" Value="{DynamicResource ScrollBarTrackColor}"/>
            <Setter Property="Width" Value="10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Border x:Name="ScrollChannel"
                                Width="12"
                                Background="{DynamicResource ScrollBarBackgroundColor}"
                                CornerRadius="6"
                                SnapsToDevicePixels="True"
                                ClipToBounds="True">
                            <Track x:Name="PART_Track"
                                   Grid.Row="0"
                                   IsDirectionReversed="True"
                                   Focusable="False">
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb"
                                           Background="{TemplateBinding Foreground}"
                                           Style="{DynamicResource ScrollThumbs}"/>
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton x:Name="PageUp"
                                                  Command="ScrollBar.PageDownCommand"
                                                  Opacity="0"
                                                  Focusable="False"/>
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton x:Name="PageDown"
                                                  Command="ScrollBar.PageUpCommand"
                                                  Opacity="0"
                                                  Focusable="False"/>
                                </Track.DecreaseRepeatButton>
                            </Track>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger SourceName="Thumb"
                                     Property="IsMouseOver"
                                     Value="True">
                                <Setter Value="{DynamicResource ScrollBarThumbHoverColor}"
                                        TargetName="Thumb"
                                        Property="Background"/>
                            </Trigger>
                            <Trigger SourceName="Thumb"
                                     Property="IsDragging"
                                     Value="True">
                                <Setter Value="{DynamicResource ScrollBarThumbDragColor}"
                                        TargetName="Thumb"
                                        Property="Background"/>
                            </Trigger>
                            <Trigger Property="IsEnabled"
                                     Value="False">
                                <Setter TargetName="Thumb"
                                        Property="Background"
                                        Value="{DynamicResource ScrollBarThumbDisabledColor}"/>
                            </Trigger>
                            <Trigger Property="Orientation"
                                     Value="Horizontal">
                                <Setter TargetName="ScrollChannel"
                                        Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="PART_Track"
                                        Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Width" Value="Auto"/>
                                <Setter Property="Height" Value="12"/>
                                <Setter TargetName="Thumb"
                                        Property="Tag"
                                        Value="Horizontal"/>
                                <Setter TargetName="PageDown"
                                        Property="Command"
                                        Value="ScrollBar.PageLeftCommand"/>
                                <Setter TargetName="PageUp"
                                        Property="Command"
                                        Value="ScrollBar.PageRightCommand"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Ends ScrollBarStyle -->
        
        <!-- Starts DataGridStyle -->
        <Style x:Key="DataGridCell" TargetType="{x:Type DataGridCell}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource DataGridTextColor}"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="pack://application:,,,/Fonts/#Lato"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="10 5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border Background="{TemplateBinding Background}"
                                BorderThickness="0"
                                CornerRadius="4">
                            <ContentPresenter VerticalAlignment="Center"
                                              HorizontalAlignment="Center"/>

                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background"
                            Value="{StaticResource DataGridRowSelectedColor}"/>
                    <Setter Property="Foreground"
                            Value="{StaticResource DataGridBackgroundColor}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource DataGridRowHoverColor}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DataGridRow" TargetType="{x:Type DataGridRow}">
            <Setter Property="Background" Value="{StaticResource DataGridRowColor}"/>
            <Setter Property="Foreground" Value="{StaticResource DataGridTextColor}"/>
            <Setter Property="Margin" Value="0,2,0,2"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="FontFamily" Value="pack://application:,,,/Fonts/#Lato"/>
            <Setter Property="FontSize" Value="14"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource DataGridRowHoverColor}"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{StaticResource DataGridRowSelectedColor}"/>
                    <Setter Property="Foreground" Value="{StaticResource DataGridBackgroundColor}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DataGridHeader" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Background" Value="#2D2F3A"/>
            <Setter Property="Foreground" Value="{StaticResource DataGridTextSecondaryColor}"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontFamily" Value="pack://application:,,,/Fonts/#Luckiest Guy"/>
            <Setter Property="Padding" Value="8"/>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="BorderBrush" Value="#444"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        <Style x:Key="DataGridStyle" TargetType="{x:Type DataGrid}">
            <Setter Property="Background" Value="{StaticResource DataGridGradientBackground}"/>
            <Setter Property="RowBackground" Value="{StaticResource DataGridRowColor}"/>
            <Setter Property="AlternatingRowBackground" Value="#252737"/>
            <Setter Property="Foreground" Value="{StaticResource DataGridTextColor}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="GridLinesVisibility" Value="None"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="RowStyle" Value="{StaticResource DataGridRow}"/>
            <Setter Property="CellStyle" Value="{StaticResource DataGridCell}"/>
            <Setter Property="ColumnHeaderStyle" Value="{StaticResource DataGridHeader}"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="SelectionUnit" Value="FullRow"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="CanUserDeleteRows" Value="False"/>
            <Setter Property="CanUserResizeRows" Value="False"/>
            <Setter Property="CanUserResizeColumns" Value="False"/>
            <Setter Property="CanUserReorderColumns" Value="False"/>
            <Setter Property="FontFamily" Value="pack://application:,,,/Fonts/#Lato"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="RowHeight" Value="35"/>
            <Setter Property="HorizontalGridLinesBrush" Value="#333"/>
            <Setter Property="VerticalGridLinesBrush" Value="#333"/>
        </Style>
        <!-- Ends DataGridStyle -->
        
        <!-- Starts ProgressBarStyle-->
        <converters:ProgressBarWidthConverter x:Key="ProgressBarWidthConverter"/>
        <Style x:Key="ProgressBarStyle" TargetType="ProgressBar">
            <Setter Property="Height" Value="20"/>
            <Setter Property="Background" Value="{StaticResource ProgressBarBackgroundColor}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ProgressBarBorderBrushColor}"/>
            <Setter Property="BorderThickness" Value="1.5"/>
            <Setter Property="Foreground" Value="{StaticResource ProgressBarForegroundColor}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ProgressBar">
                        <Border CornerRadius="10"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True">
                            <Grid x:Name="ContainerGrid" ClipToBounds="True">
                                <Rectangle Fill="{TemplateBinding Background}">
                                    <Rectangle.Effect>
                                        <DropShadowEffect BlurRadius="10"
                                                          ShadowDepth="0"
                                                          Color="#000000"
                                                          Opacity="0.3"/>
                                    </Rectangle.Effect>
                                </Rectangle>
                                <Rectangle x:Name="PART_Track"
                                           HorizontalAlignment="Left"
                                           RadiusX="10"
                                           RadiusY="10"
                                           Fill="{TemplateBinding Foreground}">
                                    <Rectangle.Width>
                                        <MultiBinding Converter="{StaticResource ProgressBarWidthConverter}">
                                            <Binding Path="Value" RelativeSource="{RelativeSource TemplatedParent}"/>
                                            <Binding Path="Minimum" RelativeSource="{RelativeSource TemplatedParent}"/>
                                            <Binding Path="Maximum" RelativeSource="{RelativeSource TemplatedParent}"/>
                                            <Binding Path="ActualWidth" ElementName="ContainerGrid"/>
                                        </MultiBinding>
                                    </Rectangle.Width>
                                    <Rectangle.Effect>
                                        <DropShadowEffect BlurRadius="15"
                                                          ShadowDepth="0"
                                                          Color="#18FFFF"
                                                          Opacity="0.4"/>
                                    </Rectangle.Effect>
                                </Rectangle>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Ends ProgressBarStyle -->
    </Application.Resources>
</Application>
