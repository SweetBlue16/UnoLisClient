//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UnoLisClient.UI.UnoLisServerReference.Leaderboards {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LeaderboardEntry", Namespace="http://schemas.datacontract.org/2004/07/UnoLisServer.Contracts.DTOs")]
    [System.SerializableAttribute()]
    public partial class LeaderboardEntry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GlobalPointsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MatchesPlayedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NicknameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RankField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WinsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GlobalPoints {
            get {
                return this.GlobalPointsField;
            }
            set {
                if ((this.GlobalPointsField.Equals(value) != true)) {
                    this.GlobalPointsField = value;
                    this.RaisePropertyChanged("GlobalPoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MatchesPlayed {
            get {
                return this.MatchesPlayedField;
            }
            set {
                if ((this.MatchesPlayedField.Equals(value) != true)) {
                    this.MatchesPlayedField = value;
                    this.RaisePropertyChanged("MatchesPlayed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nickname {
            get {
                return this.NicknameField;
            }
            set {
                if ((object.ReferenceEquals(this.NicknameField, value) != true)) {
                    this.NicknameField = value;
                    this.RaisePropertyChanged("Nickname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Rank {
            get {
                return this.RankField;
            }
            set {
                if ((this.RankField.Equals(value) != true)) {
                    this.RankField = value;
                    this.RaisePropertyChanged("Rank");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Wins {
            get {
                return this.WinsField;
            }
            set {
                if ((this.WinsField.Equals(value) != true)) {
                    this.WinsField = value;
                    this.RaisePropertyChanged("Wins");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UnoLisServerReference.Leaderboards.ILeaderboardsManager", CallbackContract=typeof(UnoLisClient.UI.UnoLisServerReference.Leaderboards.ILeaderboardsManagerCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface ILeaderboardsManager {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILeaderboardsManager/GetLeaderboard")]
        void GetLeaderboard();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILeaderboardsManager/GetLeaderboard")]
        System.Threading.Tasks.Task GetLeaderboardAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILeaderboardsManager/GetPlayerRank")]
        void GetPlayerRank(string nickname);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILeaderboardsManager/GetPlayerRank")]
        System.Threading.Tasks.Task GetPlayerRankAsync(string nickname);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILeaderboardsManagerCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeaderboardsManager/LeaderboardReceived", ReplyAction="http://tempuri.org/ILeaderboardsManager/LeaderboardReceivedResponse")]
        void LeaderboardReceived(UnoLisClient.UI.UnoLisServerReference.Leaderboards.LeaderboardEntry[] entries);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeaderboardsManager/PlayerRankReceived", ReplyAction="http://tempuri.org/ILeaderboardsManager/PlayerRankReceivedResponse")]
        void PlayerRankReceived(UnoLisClient.UI.UnoLisServerReference.Leaderboards.LeaderboardEntry entry);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILeaderboardsManagerChannel : UnoLisClient.UI.UnoLisServerReference.Leaderboards.ILeaderboardsManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LeaderboardsManagerClient : System.ServiceModel.DuplexClientBase<UnoLisClient.UI.UnoLisServerReference.Leaderboards.ILeaderboardsManager>, UnoLisClient.UI.UnoLisServerReference.Leaderboards.ILeaderboardsManager {
        
        public LeaderboardsManagerClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public LeaderboardsManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public LeaderboardsManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public LeaderboardsManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public LeaderboardsManagerClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void GetLeaderboard() {
            base.Channel.GetLeaderboard();
        }
        
        public System.Threading.Tasks.Task GetLeaderboardAsync() {
            return base.Channel.GetLeaderboardAsync();
        }
        
        public void GetPlayerRank(string nickname) {
            base.Channel.GetPlayerRank(nickname);
        }
        
        public System.Threading.Tasks.Task GetPlayerRankAsync(string nickname) {
            return base.Channel.GetPlayerRankAsync(nickname);
        }
    }
}
