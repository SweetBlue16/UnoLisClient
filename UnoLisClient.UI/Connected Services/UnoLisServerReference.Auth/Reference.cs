//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UnoLisClient.UI.UnoLisServerReference.Auth {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthCredentials", Namespace="http://schemas.datacontract.org/2004/07/UnoLisServer.Contracts.DTOs")]
    [System.SerializableAttribute()]
    public partial class AuthCredentials : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NicknameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nickname {
            get {
                return this.NicknameField;
            }
            set {
                if ((object.ReferenceEquals(this.NicknameField, value) != true)) {
                    this.NicknameField = value;
                    this.RaisePropertyChanged("Nickname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegistrationData", Namespace="http://schemas.datacontract.org/2004/07/UnoLisServer.Contracts.DTOs")]
    [System.SerializableAttribute()]
    public partial class RegistrationData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UnoLisServerReference.Auth.IAuthManager", CallbackContract=typeof(UnoLisClient.UI.UnoLisServerReference.Auth.IAuthManagerCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IAuthManager {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAuthManager/Login")]
        void Login(UnoLisClient.UI.UnoLisServerReference.Auth.AuthCredentials credentials);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAuthManager/Login")]
        System.Threading.Tasks.Task LoginAsync(UnoLisClient.UI.UnoLisServerReference.Auth.AuthCredentials credentials);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAuthManager/Register")]
        void Register(UnoLisClient.UI.UnoLisServerReference.Auth.RegistrationData data);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAuthManager/Register")]
        System.Threading.Tasks.Task RegisterAsync(UnoLisClient.UI.UnoLisServerReference.Auth.RegistrationData data);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAuthManager/ConfirmCode")]
        void ConfirmCode(string email, string code);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAuthManager/ConfirmCode")]
        System.Threading.Tasks.Task ConfirmCodeAsync(string email, string code);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAuthManagerCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthManager/LoginResponse", ReplyAction="http://tempuri.org/IAuthManager/LoginResponseResponse")]
        void LoginResponse(bool success, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthManager/RegisterResponse", ReplyAction="http://tempuri.org/IAuthManager/RegisterResponseResponse")]
        void RegisterResponse(bool success, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthManager/ConfirmationResponse", ReplyAction="http://tempuri.org/IAuthManager/ConfirmationResponseResponse")]
        void ConfirmationResponse(bool success);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAuthManagerChannel : UnoLisClient.UI.UnoLisServerReference.Auth.IAuthManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthManagerClient : System.ServiceModel.DuplexClientBase<UnoLisClient.UI.UnoLisServerReference.Auth.IAuthManager>, UnoLisClient.UI.UnoLisServerReference.Auth.IAuthManager {
        
        public AuthManagerClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public AuthManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public AuthManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public AuthManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public AuthManagerClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Login(UnoLisClient.UI.UnoLisServerReference.Auth.AuthCredentials credentials) {
            base.Channel.Login(credentials);
        }
        
        public System.Threading.Tasks.Task LoginAsync(UnoLisClient.UI.UnoLisServerReference.Auth.AuthCredentials credentials) {
            return base.Channel.LoginAsync(credentials);
        }
        
        public void Register(UnoLisClient.UI.UnoLisServerReference.Auth.RegistrationData data) {
            base.Channel.Register(data);
        }
        
        public System.Threading.Tasks.Task RegisterAsync(UnoLisClient.UI.UnoLisServerReference.Auth.RegistrationData data) {
            return base.Channel.RegisterAsync(data);
        }
        
        public void ConfirmCode(string email, string code) {
            base.Channel.ConfirmCode(email, code);
        }
        
        public System.Threading.Tasks.Task ConfirmCodeAsync(string email, string code) {
            return base.Channel.ConfirmCodeAsync(email, code);
        }
    }
}
