//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UnoLisClient.UI.UnoLisServerReference.Friends {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FriendRequestData", Namespace="http://schemas.datacontract.org/2004/07/UnoLisServer.Contracts.DTOs")]
    [System.SerializableAttribute()]
    public partial class FriendRequestData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequesterNicknameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TargetNicknameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequesterNickname {
            get {
                return this.RequesterNicknameField;
            }
            set {
                if ((object.ReferenceEquals(this.RequesterNicknameField, value) != true)) {
                    this.RequesterNicknameField = value;
                    this.RaisePropertyChanged("RequesterNickname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TargetNickname {
            get {
                return this.TargetNicknameField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetNicknameField, value) != true)) {
                    this.TargetNicknameField = value;
                    this.RaisePropertyChanged("TargetNickname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FriendData", Namespace="http://schemas.datacontract.org/2004/07/UnoLisServer.Contracts.DTOs")]
    [System.SerializableAttribute()]
    public partial class FriendData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FriendNicknameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsOnlineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FriendNickname {
            get {
                return this.FriendNicknameField;
            }
            set {
                if ((object.ReferenceEquals(this.FriendNicknameField, value) != true)) {
                    this.FriendNicknameField = value;
                    this.RaisePropertyChanged("FriendNickname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsOnline {
            get {
                return this.IsOnlineField;
            }
            set {
                if ((this.IsOnlineField.Equals(value) != true)) {
                    this.IsOnlineField = value;
                    this.RaisePropertyChanged("IsOnline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusMessage {
            get {
                return this.StatusMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusMessageField, value) != true)) {
                    this.StatusMessageField = value;
                    this.RaisePropertyChanged("StatusMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UnoLisServerReference.Friends.IFriendsManager", CallbackContract=typeof(UnoLisClient.UI.UnoLisServerReference.Friends.IFriendsManagerCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IFriendsManager {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IFriendsManager/GetFriendsList")]
        void GetFriendsList(string nickname);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IFriendsManager/GetFriendsList")]
        System.Threading.Tasks.Task GetFriendsListAsync(string nickname);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IFriendsManager/SendFriendRequest")]
        void SendFriendRequest(UnoLisClient.UI.UnoLisServerReference.Friends.FriendRequestData request);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IFriendsManager/SendFriendRequest")]
        System.Threading.Tasks.Task SendFriendRequestAsync(UnoLisClient.UI.UnoLisServerReference.Friends.FriendRequestData request);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IFriendsManager/AcceptFriendRequest")]
        void AcceptFriendRequest(UnoLisClient.UI.UnoLisServerReference.Friends.FriendRequestData request);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IFriendsManager/AcceptFriendRequest")]
        System.Threading.Tasks.Task AcceptFriendRequestAsync(UnoLisClient.UI.UnoLisServerReference.Friends.FriendRequestData request);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IFriendsManager/RemoveFriend")]
        void RemoveFriend(UnoLisClient.UI.UnoLisServerReference.Friends.FriendRequestData request);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IFriendsManager/RemoveFriend")]
        System.Threading.Tasks.Task RemoveFriendAsync(UnoLisClient.UI.UnoLisServerReference.Friends.FriendRequestData request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFriendsManagerCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendsManager/FriendsListReceived", ReplyAction="http://tempuri.org/IFriendsManager/FriendsListReceivedResponse")]
        void FriendsListReceived(UnoLisClient.UI.UnoLisServerReference.Friends.FriendData[] friends);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendsManager/FriendRequestReceived", ReplyAction="http://tempuri.org/IFriendsManager/FriendRequestReceivedResponse")]
        void FriendRequestReceived(string fromNickname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendsManager/FriendRequestResult", ReplyAction="http://tempuri.org/IFriendsManager/FriendRequestResultResponse")]
        void FriendRequestResult(bool success, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendsManager/FriendListUpdated", ReplyAction="http://tempuri.org/IFriendsManager/FriendListUpdatedResponse")]
        void FriendListUpdated(UnoLisClient.UI.UnoLisServerReference.Friends.FriendData[] updatedList);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFriendsManagerChannel : UnoLisClient.UI.UnoLisServerReference.Friends.IFriendsManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FriendsManagerClient : System.ServiceModel.DuplexClientBase<UnoLisClient.UI.UnoLisServerReference.Friends.IFriendsManager>, UnoLisClient.UI.UnoLisServerReference.Friends.IFriendsManager {
        
        public FriendsManagerClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public FriendsManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public FriendsManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public FriendsManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public FriendsManagerClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void GetFriendsList(string nickname) {
            base.Channel.GetFriendsList(nickname);
        }
        
        public System.Threading.Tasks.Task GetFriendsListAsync(string nickname) {
            return base.Channel.GetFriendsListAsync(nickname);
        }
        
        public void SendFriendRequest(UnoLisClient.UI.UnoLisServerReference.Friends.FriendRequestData request) {
            base.Channel.SendFriendRequest(request);
        }
        
        public System.Threading.Tasks.Task SendFriendRequestAsync(UnoLisClient.UI.UnoLisServerReference.Friends.FriendRequestData request) {
            return base.Channel.SendFriendRequestAsync(request);
        }
        
        public void AcceptFriendRequest(UnoLisClient.UI.UnoLisServerReference.Friends.FriendRequestData request) {
            base.Channel.AcceptFriendRequest(request);
        }
        
        public System.Threading.Tasks.Task AcceptFriendRequestAsync(UnoLisClient.UI.UnoLisServerReference.Friends.FriendRequestData request) {
            return base.Channel.AcceptFriendRequestAsync(request);
        }
        
        public void RemoveFriend(UnoLisClient.UI.UnoLisServerReference.Friends.FriendRequestData request) {
            base.Channel.RemoveFriend(request);
        }
        
        public System.Threading.Tasks.Task RemoveFriendAsync(UnoLisClient.UI.UnoLisServerReference.Friends.FriendRequestData request) {
            return base.Channel.RemoveFriendAsync(request);
        }
    }
}
